// <auto-generated />
using ECommerceApp.Services.ProductService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceApp.Services.ProductService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251003224457_AddProduct_ProductService")]
    partial class AddProduct_ProductService
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerceApp.Services.ProductService.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLocalPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Smart Phone",
                            Description = "IPhone 13 from Apple",
                            ImageLocalPath = "",
                            ImageUrl = "https://fdn2.gsmarena.com/vv/bigpic/apple-iphone-15.jpg",
                            Name = "IPhone 13",
                            Price = 999.99000000000001
                        },
                        new
                        {
                            Id = 2,
                            Category = "Smart Phone",
                            Description = "Samsung Galaxy S21 from Samsung",
                            ImageLocalPath = "",
                            ImageUrl = "https://fdn2.gsmarena.com/vv/bigpic/samsung-galaxy-s21-5g-r.jpg",
                            Name = "Samsung Galaxy S21",
                            Price = 899.99000000000001
                        },
                        new
                        {
                            Id = 3,
                            Category = "Smart Phone",
                            Description = "Google Pixel 6 from Google",
                            ImageLocalPath = "",
                            ImageUrl = "https://fdn2.gsmarena.com/vv/pics/google/google-pixel-6-1.jpg",
                            Name = "Google Pixel 6",
                            Price = 799.99000000000001
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
